let listen n p = if (n > 0)
                    then id $ p
                    else (const $ s "") $ p

d1 $
-- foldEvery [7, 9] (density "<0.5 0.35>") $
whenmod 7 6 ((density "0.7 0.2 0.8 0.1") . (fast "2.5 1.5 3 1.2 4.3") . (|* release 0.125) . (# speed "<2 2.2 3 4.2 6>")) $
every 9 (density 0.35) $
stack [
  -- -- kick1
  -- listen 1 $
  -- stutWith 2 (0.125*3) (stutWith "4 5" (1) ((|+ shape 0.2) . (|* speed 1.2 ))) $
  --   s "{~ 808bd:2(2, <5 7 9>, <2 1>)}%3.5"
  --   # cut "-1 1"
  --   # gain 0.9,
  -- kick2
  listen 1 $
  foldEvery [3, 5] ((fast 2) . (|* attack 4)) $
    s "{~ _ 808bd:36(2, 9)}%<7 3.5>"
      # attack "0.06 0.08"
      # release "0.6 0.9 0.2"
      # cut "1 2"
      # gain 1,
  -- voice
  listen 1 $
  whenmod 5 3 ((0.5 <~) . (# bpf "100 1200 16000") . (slow 4)) $
  plyWith "<3 9 2>" ((|* shape 0.5) . (|* release "2 4 8")) $
    s "[h:6(7, 16), h:6 _ h:2 ~ h:4]"
      # hpf 6000
      # attack "0.2 1.2 2.1 0.4 0.5"
      # release "0.03 0.01"
      # pan (range 0.25 0.75 $ fast 2 sine)
      # gain 0.85,
  -- random
  listen 1 $
  whenmod 8 4 ((degradeBy 0.25) . (slow 2)) $
    n "1 8 [3 6] 5 7 [9 10 4] 2"
    # s "future"
    # cut "-1 2"
    # gain 0.9,
  -- snare
  listen 1 $
  every 2 ((ghost) . (density 5)) $
  every 4 (0.25 <~) $
    s "{808sd:23}%1.75"
      # speed 1.2
      # release 0.05
      # room "0.32 0.2 0.1 0.3"
      # size "0.2 0.1 0.05 0.1"
      # gain 1,
  -- cowBell
  listen 1 $
  s "808hc"
    # room ((0.25 <~) $ range 0.2 0.6 $ rand)
    # size (range 0 0.6 $ fast 3 square)
    # gain 0.9,
  -- clap
  listen 1 $
  ghost $
  every 3 (degradeBy 0.6) $
  s "808:3(5, 9)"
    # hpf 2600
    # bpf 12000
    # release "0.05 0.2 0.02 0.6"
    # room (range 0.1 0.3 $ rand)
    # size(range 0.05 0.2 $ rand)
    # pan (range 0.15 0.85 $ fast 2.1 tri)
    # gain (range 0.85 1 $ fast 2 $ rand)
] # cps 0.6

d1 silence

d2 $ stack [
  -- wave
  listen 1 $
  every 3 ((0.5 <~) . (|+ speed 2)) $
  loopAt 4.5 $
  s "d:2"
    # hpf 32
    # gain 0.6,
  -- voice1
  listen 1 $
  every 4 (stutWith 4 0.25 ((0.25 ~>) . (|+ attack 0.2))) $
  loopAt 2 $
    s "ade:3(<2 5>, 9, 2)"
      # legato (range 0.01 0.9 $ fast 2 rand)
      # attack "0.8 0.2 0.01 0.02 0.4 0.9"
      # release 1.2
      # speed 0.2
      # hpf 300
      # cut (-1)
      # pan (range 0.35 0.65 $ slow 2 sine)
      # gain 0.8,
  -- voice2
  listen 1 $
  loopAt 18 $
    s "pad"
      # speed 0.4
      # hpf 120
      # lpf 1200
      -- # attack 0.2
      -- # release "0.86 1.2 0.8 0.9 1.4"
      # pan (range 0.15 0.85 $ fast 3 square)
      # gain 0.5,
  -- hihat
  listen 1 $
  every 2 rev $
  stutWith 4 (1/3) ((density 0.1) . (fast 0.4)) $
    s "{alex:0}%4.5"
      # hpf 2360
      # bpf 12000
      # gain 0.85,
  -- kick
  listen 1 $
  whenmod 8 6 (density 0.7) $
  every 8 (stutWith 4 (1/4) ((|* bpf 0.8) . (|* bpq 7) . (# gain 0.5))) $
  s "[808bd:49(1, 12, 12), 808bd:43(2, 5, 2), 808bd:41(4, 9, 8)]"
    # release 5.8
    # bpf 96
    # bpq 4.2
    # hpf 90
    # gain 1,
  -- clap
  listen 1 $
  every 3 (density 1.4) $
  s "{~@6 cp:1@3 ~@5}%9"
    # hpf 1900
    # size (range 0 1 $ sine)
    # room (range 0 0.6 $ rand)
    # gain 0.84
] # cps 0.9

d2 silence

d3 $ whenmod 12 9 ((density "0.7 0.2 0.8 0.1") . (fast "2.5 1.5 3 1.2 4.3") . (|* release 0.125) . (# speed "<2 2.2 3 4.2 6>")) $
every 10 (degradeBy 0.35) $
stack [
  -- kick
  listen 1 $
  within (0.5, 0.75) (density 2.5) $
  every 4 (slow 2) $
  struct (binary 48) $
    s "dr55:1"
      # shape 0.8
      # bpf "87 92 103"
      # bpq "0.9 0.5 2.2"
      # gain 1,
  -- snare
  listen 1 $
  every 2 (const $ s "~@3 e _") $
  s "~@2 e@2"
    # room "0.4 0.8 0.3"
    # size "0.6 0.22 0.93"
    # lpf 42
    # hpf 14000
    # gain 0.98,
  -- woody
  listen 1 $
  s "east(5, 11)"
    # room "0.2 0.12 0.56 0.43 0.1"
    # size "0.1 0.32 0.53 0.21 0.02"
    # gain 0.95,
  -- hihat
  listen 1 $
  every 2 ((density 1.3) . ghost) $
  s "{gretsch:5(2, 5)}%4"
    # release 0.02
    # pan (range 0.3 0.7 $ fast 2 sine)
    # gain 1.1,
  -- random
  listen 1 $
  whenmod 6 2 ((density "0.1 0.01 0.4 1.2") . (hurry "6 0.5 3 0.2") . (stutWith 4 (1/4) (|+ shape 0.3)) . (|- gain 0.4)) $
  chunk' 4 ((loopAt "1 2 4 7") . (# start 0.25)) $
  s "dist"
    # n (range 0 12 $ rand)
    # unit "c"
    # legato 4
    # hpf 92
    # gain 1
] # cps 0.8

d3 silence

d4 $ whenmod 7 5 ((hurry "2 <0.5 3 0.2>") . (|- gain 0.1)) $
stack [
  -- kick
  listen 1 $
  fix (# gain 0.9) (s "ek:8") $
  within' (0.25, 0.5) (# attack "<0.01 0.03>") $
  every 3 (const $ s "[ek(3, 5, 4), ~ ek:8]") $
  s "[ek(3, 5, <0 2>), ~ ek:8]"
    # shape 0.3
    # cut 1
    # gain 1
  ,
  -- hihat
  listen 1 $
  every 5 ((0.5 <~) . (|* speed "<3 4>") . rev) $
   s "e(7, 10, <4 2 5>)"
    # bpf 7000
    # pan (range 0 1 $ rand)
    # shape 0.7
    # gain 0.92
  ,
  -- bass
  listen 1 $
  foldEvery [3, 10] (hurry 0.8) $
  s "~ sine:1 _ _ _"
    # speed "0.8 0.86 0.9 1.2"
    # gain 0.98
  ,
  -- snare
  listen 1 $
  whenmod 5 4 (degradeBy 0.5) $
  s "[v1:5(3, 10), v1:5(2, 5, <2 4 3>)]"
    # rel 0.2
    # gain 0.8
  ,
  -- melo
  listen 1 $
  every 2 (|* speed "0.4 0.2 0.8") $
  s "~ _ tables:0 _"
    # shape (perlinWith (saw))
    # speed (range 0.2 0.3 $ perlinWith (tri))
    # cut 1
    # gain 0.8
] # cps 0.72

d4 silence

d5 $ whenmod 12 10 (chunk' 4 ((fast "0.45 0.7 1.3 0.8 2") . (density "0.2 2 0.9 0.87") . (|* gain 0.9))) $
stack [
  -- kick
  listen 1 $
  every 8 (hurry 0.3) $
  whenmod 4 3 (# release "0.08 0.06 2 0.05") $
  s "[<~ v2:3 ~> _ v2*2, ~ v2 _ <v2:3 ~ v2> _ v2*2]"
    # cut (wchoose[(-1, 0.75),(1, 0.25)])
    # gain 0.9
  ,
  -- noise
  listen 1 $
  ghost $
  every 3 (loopAt (wchooseBy (range 0 1 $ slow 3 sine) [(2, 0.15),(4, 0.75), (8, 0.1)])) $
  whenmod 3 2 ((slow "4 <6 2>") . (density "1.2 <3 6>") . (# triode "0.6 0.8 0.9 0.2")) $
  stutWith 4 (1/24) (# n (fromTo 0 10)) $
  s "v1"
    # cut 1
    # gain 0.8
  ,
  -- white
  listen 1 $
  every 2 ((# release "<0.2 0.46 0.8 1.2 1.8 0.1>") . (stutWith 3 (1/3) (# vowel "{a y e i o u}%2"))) $
  chunk 4 (# shape 0.9) $
  s "ef:3*<5 2 9 1> <ef:9 ~ ef ~> ef:6"
    # attack "0.6 0.4 0.9 1.2"
    # gain 0.87
  ,
  -- snare
  listen 1 $
  s "[~ v5:9, ~ v5:9@2 ~]"
    # size "<0.1 0.4 0.6>"
    # room (fromTo 0 0.3)
    # gain 0.92
  ,
  -- hihat
  listen 1 $
  sometimesBy 0.75 (superimpose (fast "<2 4 0.5>")) $
  s "v1:13*8"
    # rel "0.02 0.001 0.034"
    # pan (range 0.2 0.8 $ perlin)
    # gain 0.82
] # cps 0.69

d5 silence

d6 $ someCyclesBy 0.23 (palindrome . (within (0.3, 0.85) (hurry "0.9 1.3 1.6 0.6")) . (# cut 1) . (# gain 0.84)) $
stack [
  -- kick
  listen 1 $
  whenmod 6 5 (within' (0.5, 1) ((hurry "2 1.4 0.8 0.4 <1.2 0.2>") . (plyWith 6 ((# gain 0.69) . (# delay "0.5 0.32 [0.41 0.12] 0.08") . (# delayfb "0.4 0.23 0.62 [0.5 0.08 0.32]") . (# delaytime "0.5 1.2 0.1 0.06 0.013"))))) $
  whenmod 5 4 (const $ s "[ek:5(<3 2>, 9, <7 9 12>)]*2") $
  s "[ek:5(4, 9, <12 6>)]*2"
    # lpf "19832*2 532 621 16000 738 18000"
    # cut 1
    # gain 0.98
  ,
  -- hihat
  listen 1 $
  ghost $
  s "[~ v2:2*2 _ ~ v2:2*3 ~@2 v2:2*5]"
    # att (wchoose[(0.02, 0.25), (0.05, 0.25), (0.12, 0.5)])
    # rel "0.2 0.013 0.043 0.05"
    # distort "0.02 0.1 <0.3 0.01> 0.32"
    # pan (range 0.4 0.6 $ rand)
    # gain 0.84
  ,
  -- perc
  listen 1 $
  sometimesBy 0.4 (# speed 0.4) $
  whenmod 3 2 ((hurry 6) . (# gain 0.82)) $
  every 2 (rev . (# rel 0.85)) $
  s "[~@2 foleyperc:2]/2"
    # gain 0.91
  ,
  -- snare
  listen 1 $
  whenmod 4 3 (("0.25 0.5 <0.35 0.75>" <~) . (stut "6 2 4 <12 5>" 0.5 (-0.2))) $
  every 3 (const $ s "~ _ hhh:4 _") $
  s "hhh:4 _"
    # cut 1
    # gain 0.84
  ,
  -- tone
  listen 1 $
  sometimesBy 0.5 (degradeBy 0.5) $
  whenmod 6 5 (stutWith 4 (1/3) (# vowel "{i u}%9")) $
  every 4 (within (0.25, 0.75) (const $ s "~")) $
  s "[et:2(4, 9, 3)]*2"
    # triode 0.6
    # bpf 4320
    # pan (range 0 1 $ rand)
    # gain 0.94
] # cps 0.32

d6 silence

d7 $ somecyclesBy 0.2 ((slow 5) . (hurry "<2 4.5 0.8 1.23>") . (# cut "<1 -1 -1 1 1>") . (# gain 0.82)) $
stack [
  -- nappe
  listen 1 $
  loopAt 2 $
  s "comb:1"
    # lpf "200 800 <460 12005>"
    # speed 0.12
    # comb "0.56 0.4 0.2 <0.97 1.2>"
    # cut (wchoose [(1, 0.6), (-1, 0.4)])
    # gain 0.92
  ,
  -- kick
  listen 1 $
  someCyclesBy 0.21 ((density 1.3) . (sometimesBy 0.64 ((hurry "0.6 0.3 1.7 <0.6 0.2 0.7> 0.2") . (# gain 0.86)))) $
  someCyclesBy 0.32 (degradeBy 0.4) $
  sometimesBy 0.19 (palindrome) $
  fix (# gain 0.95) (s "v1:1") $
  fix (# gain 0.92) (s "v1:0") $
  s "~ ek:21@3 <v1:0 ~ v1:1> _ ek:21 _"
    # cut 1
    # gain 0.97
  ,
  -- hihat
  listen 1 $
  whenmod 4 3 (hurry "<2 3 1.2> 0.4 <0.9 1.3 4>") $
  sometimesBy 0.68 (ghost' 0.04) $
  s "hats*7 _ hats"
    # rel 0.001
    # cutoff "8400 9321 12006 903"
    # resonance "0.3 0.001 0.02 0.9"
    # pan (range 0 1 $ perlin2 4)
    # gain 1.6
  ,
  -- lofi
  listen 1 $
  sometimesBy 0.65 (hurry "0.3 0.7 1.4") $
  every 4 (wchoose [(0.25, 0.25), (0.5, 0.25), (0.75, 0.5)] <~) $
  s "[if ~]/2"
    # gain 0.82
  ,
  -- noise
  listen 1 $
  every 2 ((# speed "0.8 0.2") . (# release "<1.6 0.5 [0.3 0.9]>")) $
  s "{layer:13(2, 7, <1 2 7>)}/2"
    # gain 0.72
] # cps 0.92

d7 silence

d8 $ somecyclesBy 0.12 (rev) $
whenmod 10 9 ((degradeBy 0.4) . (palindrome)) $
stack [
  -- woody
  listen 1 $
  every 4 (degradeBy 0.5) $
  sometimesBy 0.34 (within (0, 0.25) (stutWith 5 (1/rand) ((|* rel "0.41 0.2") . rev))) $
  whenmod 6 5 ((|+ rel "1 0.9 0.2 0.001") . (|* (range 0 2 $ slow 2 sine))) $
  s "[jpnperc:3 _ jpnperc:3, jpnperc:4 [jpnperc:4 jpnperc:4*2]]"
    # att "<0 0.2 0 0 0.32>"
    # rel "1 0.9 0.2 0.001"
    # bpf "543 13098"
    # cut "<-1 1>"
    # pan (range 0.45 0.75 $ fast 2 rand)
    # gain 1.3
  ,
  -- pad
  listen 1 $
  loopAt 7 $
  s "pads:1"
    # rel 2.3
    # cut (wchoose [(1, 0.3), (0, 0.7)])
    # gain 0.74
  ,
  -- perc
  listen 1 $
  someCyclesBy 0.3 (loopAt "<2 6>") $
  s "{percs(6, 4, <3 2 6>)}%0.25"
    # bpf (range 542 19780 $ fast 6 perlin)
    # gain 0.93
  ,
  -- kick1
  listen 1 $
  whenmod 4 2 (wchoose [(1, 0.7), (0.75, 0.3)] <~) $
  s "[~ ek:6, ~ _ [ek:6*2 ek:7]]"
    # cut (wchoose [(1, 0.4), (0, 0.6)])
    # gain 1
  ,
  -- kick2
  listen 1 $
  s "[~ _ _ clic:1 ~]/2"
    # cut (wchoose [(1, 0.2), (0, 0.8)])
    # gain 1
  ,
  -- melo
  listen 1 $
  whenmod 6 4 (stutWith 4 (0.125) ((|* gain 0.9) . (hurry "[0.6 [4.2 0.3 4] 0.6]*2") . (# size "0.2 0.5 0.8") . (# room (range 0 0.5 $ slow 5 sine)))) $
  loopAt (wchoose [(1, 0.65), (2, 0.35)]) $
  s "~ ~ b:5"
    # gain 1
    # pan 0.62
] # cps 0.72

d8 silence

d9 $ whenmod 8 6 ((fast "<0.4 7 4 0.22>") . (density "0.2 0.4 1.31 0.03 1.43") . (# cut 1) . (# gain 0.86)) $
stack [
  -- wave
  listen 1 $
  whenmod 4 3 (# rel "0.02 0.3 0.7 1.2") $
  every 3 (stutWith 3 (1/5) ((gap "<4 3 5>") . (|* gain 0.9))) $
  s "{bf:4}%0.875"
    # pan (range 0.25 0.45 $ slow 3 tri)
    # gain 0.87
  ,
  -- wave low
  listen 1 $
  s "~ _ ~ bf:8"
    # gain 1
  ,
  -- white noise
  listen 1 $
  whenmod 7 6 (# att "0.04 0.12 0.03 0.1") $
  sometimes (# speed 0.3) $
  s "bf:10*4"
    # gain 0.95
  ,
  -- kick
  listen 1 $
  fast 2 $
  whenmod 13 12 (palindrome) $
  whenmod 9 8 ((# accelerate "6 2 9 0.1 0.7") . (# shape "0.3 0.4 0.8") . (# gain "1 0.94 0.8") . (0.75 ~>)) $
  every 2 (0.5 <~) $
  fix (# pan 0.66) (s "bf:3") $
  fix (# pan 0.53) (s "bf:1") $
  s "[[~ bf:3 _ bf:3 _] bf:3, bf:1 _ ~ bf:1]"
    # gain 1.16
  ,
  -- snare
  listen 1 $
  whenmod 3 2 (hurry "0.12 7 5 <0.33 9>") $
  every 4 (wchoose [(0.25, 0.65), (1.25, 0.35)] ~>) $
  s "~ ag:9"
    # speed 5
    # gain 0.98
  ,
  -- hihat
  listen 1 $
  whenmod 8 7 ((hurry "4 2 0.6 1.2") . (# gain 0.9)) $
  sometimesBy 0.3 (palindrome . (# accelerate "<0 4>")) $
  fast 3 $
  s "bc:5(5, 14, <2 9 3>)"
    # rel "0.1 0.02 1.2 0.4 0.01 0.6"
    # pan 0.84
    # gain 1.2
] # cps 0.49

d9 silence

hush
